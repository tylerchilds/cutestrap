* {
    --cs-rhythm: 2rem;
    --cs-rhythm-quadruple: calc(4 * var(--cs-rhythm));
    --cs-rhythm-triple: calc(3 * var(--cs-rhythm));
    --cs-rhythm-double: calc(2 * var(--cs-rhythm));
    --cs-rhythm-half: calc((1/2) * var(--cs-rhythm));
    --cs-rhythm-third: calc((1/3) * var(--cs-rhythm));
    --cs-rhythm-fourth: calc((1/4) * var(--cs-rhythm));
    --cs-rhythm-sixth: calc((1/6) * var(--cs-rhythm));
    --cs-rhythm-eighth: calc((1/8) * var(--cs-rhythm));
    --cs-rhythm-twelfth: calc((1/12) * var(--cs-rhythm));
    --cs-rhythm-sixteenth: calc((1/16) * var(--cs-rhythm));
    --cs-line-height-ratio: 1.4;
    --cs-font-size: calc(var(--cs-sub-rhythm, var(--cs-rhythm)) / var(--cs-line-height-ratio));
    --cs-line-height: var(--cs-sub-rhythm, var(--cs-rhythm));
}

@media (max-width: 65em) {
    * {
        --cs-rhythm: 1.5rem;
    }
}

html {
    --cs-font-family: 'Avenir', 'Avenir Next', 'Helvetica Neue', 'Segoe UI', 'Verdana', sans-serif;
    --cs-font-mono: 'Consolas', 'Monaco', 'Courier New', monospace;
    --cs-font-heading: var(--cs-font-family);
    --cs-font-body: var(--cs-font-family);
    --cs-font-mono: var(--cs-font-mono);
    --cs-border-radius: 4px;
    --cs-color-primary: #ea4c6b;
    --cs-color-primary-dark: #bb3c55;
    --cs-color-link: #4c6bea;
    --cs-color-link-visited: #7c4cea;
    --cs-color-link-hover: #3c55bb;
    --cs-color-link-active: #bb3c55;
    --cs-color-black: #000;
    --cs-color-gray1: #3c3c3d;
    --cs-color-gray2: #5a5a5b;
    --cs-color-gray3: #7d7d7e;
    --cs-color-gray4: #cdcdce;
    --cs-color-gray5: #dededf;
    --cs-color-gray6: #efeff0;
    --cs-color-white: #fff;
}

body {
    font-size: var(--cs-font-size);
    line-height: var(--cs-line-height);
}

* {
    border: 0;
    font: inherit;
    margin: 0;
    padding: 0;
    text-rendering: geometricPrecision;
}

html {
    box-sizing: border-box;
    height: 100%;
}

body {
    box-sizing: border-box;
    background-color: var(--cs-color-white);
    color: var(--cs-color-gray1);
    font-family: var(--cs-font-body);
    min-height: 100%;
    position: relative;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: var(--cs-font-heading);
    font-size: var(--cs-font-size);
    line-height: var(--cs-line-height);
    margin: var(--cs-rhythm) 0;
}

h1 {
    --cs-sub-rhythm: var(--cs-rhythm-triple);

    font-weight: 700;
}

h2 {
    --cs-sub-rhythm: var(--cs-rhythm-triple);
}

h3 {
    --cs-sub-rhythm: var(--cs-rhythm-triple);

    font-weight: 100;
}

h4 {
    --cs-sub-rhythm: var(--cs-rhythm-double);

    font-weight: 700;
}

h5 {
    --cs-sub-rhythm: var(--cs-rhythm-double);
}

h6 {
    font-weight: 700;
}

p {
    padding-bottom: var(--cs-rhythm);
}

form {
    padding: var(--cs-rhythm) 0;
}

pre,
code,
samp,
kbd {
    background-color: var(--cs-color-gray6);
    font-size: var(--cs-font-size);
    color: var(--cs-color-primary-dark);
    font-family: var(--cs-font-mono);
    line-height: 1;
}

code,
samp,
kbd {
    border-radius: var(--cs-border-radius);
    overflow-y: hidden;
    overflow-x: auto;
    padding: var(--cs-rhythm-sixth);
}

pre {
    border-radius: var(--cs-border-radius);
    line-height: var(--cs-line-height);
    overflow-y: hidden;
    overflow-x: auto;
    padding: var(--cs-rhythm-half);
    margin: 0 0 var(--cs-rhythm);
}

pre code,
pre samp,
pre kbd {
    background-color: transparent;
    border: none;
    border-radius: 0;
    padding: 0;
}

a:link {
    color: var(--cs-color-link);
}

a:visited {
    color: var(--cs-color-link-visited);
}

a:hover,
a:focus {
    color: var(--cs-color-link-hover);
}

a:active {
    color: var(--cs-color-link-active);
}

img,
video {
    max-width: 100%;
    display: table;
}

hr {
    height: var(--cs-rhythm-double);
    margin-bottom: var(--cs-rhythm);
    position: relative;
}

hr::before {
    background-color: var(--cs-color-gray4);
    content: '';
    height: 1px;
    position: absolute;
    top: 50%;
    width: 100%;
}

ol,
ul {
    margin-left: var(--cs-rhythm);
    padding: 0 0 var(--cs-rhythm);
}

ol {
    list-style-type: decimal;
}

ol ol {
    padding-bottom: 0;
}

ul {
    list-style-type: disc;
}

ul ul {
    padding-bottom: 0;
}

dt {
    font-style: italic;
}

dd {
    padding-left: var(--cs-rhythm);
}

blockquote {
    margin: 0 0 var(--cs-rhythm) var(--cs-rhythm-half);
    border-left: var(--cs-rhythm-eighth) solid var(--cs-color-gray4);
    padding: var(--cs-rhythm) var(--cs-rhythm-half);
}

blockquote p:last-child {
    padding-bottom: 0;
}

figure {
    margin: 0 auto;
    padding-bottom: var(--cs-rhythm);
}

figure img {
    display: table;
    margin: 0 auto;
}

small,
sub,
sup,
caption,
figcaption {
    font-size: calc(2 * var(--cs-rhythm-third));
    vertical-align: top;
}

sub,
sup {
    position: relative;
}

sub {
    top: var(--cs-rhythm-third);
}

sup {
    bottom: var(--cs-rhythm-third);
}

caption,
figcaption {
    font-style: italic;
    text-align: center;
}

em,
cite,
i {
    font-style: italic;
}

strong,
var,
b {
    font-weight: bold;
}

q::before {
    content: "'";
}

q::after {
    content: "'";
}

q > q {
    font-style: italic;
}

dfn,
abbr {
    border-bottom: var(--cs-rhythm-sixteenth) dotted var(--cs-color-gray2);
    cursor: default;
}

table {
    border-radius: var(--cs-border-radius);
    border-collapse: separate;
    border-spacing: 0;
    margin-bottom: var(--cs-rhythm);
    width: 100%;
}

table th {
    font-weight: 500;
    text-align: left;
}

table th,
table td {
    padding: 0 var(--cs-rhythm-fourth);
}

input,
label,
select,
button,
textarea {
    padding: var(--cs-rhythm-half);
    display: block;
    resize: none;
    -webkit-appearance: none;
    -moz-appearance: none;
}

select:-moz-focusring {
    /* color: transparent;
    text-shadow: 0 0 0 #f00; */
}

label {
    color: var(--cs-color-gray3);
    padding: 0;
}

/*

Buttons

Buttons and their variations

Markup:
<button class="button {{modifier_class}}">Button</button>

.-secondary - A button with secondary colors
.-outlined - An outlined button
.-link - A button that looks like a link
.-large - A large button
.-small - A small button
.-small.-outlined - A small, outlined button

Styleguide 2.0

*/

.button {
    --border-color: transparent;
    --border-color-hover: transparent;
    --border-radius: var(--cs-border-radius);
    --border-thickness: var(--cs-rhythm-twelfth);
    --background-color: var(--cs-color-primary);
    --background-color-hover: var(--cs-color-primary-dark);
    --font-size: var(--cs-font-size);
    --line-height: var(--cs-rhythm);
    --margin: 0 var(--cs-rhythm-twelfth);
    --min-height: calc(2 * var(--cs-rhythm));
    --padding: calc(5 * var(--cs-rhythm-twelfth)) var(--cs-rhythm);
    --text-color: var(--cs-color-white);
    --text-color-hover: var(--cs-color-white);

    align-items: center;
    align-content: center;
    background-color: var(--background-color);
    border: var(--border-thickness) solid var(--border-color);
    border-radius: var(--border-radius);
    box-sizing: border-box;
    color: var(--text-color);
    cursor: pointer;
    display: inline-flex;
    font-size: var(--font-size);
    justify-content: center;
    line-height: var(--line-height);
    margin: var(--margin);
    max-width: 100%;
    min-height: var(--min-height);
    padding: var(--padding);
    text-align: center;
    transition-duration: 250ms;
    transition-property: all;
    user-select: none;
    width: auto;
    vertical-align: middle;
}

.button::-moz-focus-inner {
    border: 0;
}

.button:link,
.button:visited {
    color: var(--text-color);
}

.button:focus,
.button:hover {
    background-color: var(--background-color-hover);
    border-color: var(--border-color-hover);
    color: var(--text-color-hover);
}

.button:focus {
    outline: var(--cs-rhythm-twelfth) dotted #f00;
    outline-offset: var(--cs-rhythm-twelfth);
}

.button:active {
    background-color: var(--background-color);
    color: var(--text-color);
}

.button:disabled {
    opacity: .5;
    pointer-events: none;
}

.button.-outlined {
    --background-color: transparent;
    --background-color-hover: var(--cs-color-primary-dark);
    --border-color: var(--cs-color-primary);
    --border-color-hover: var(--cs-color-primary-dark);
    --text-color: var(--cs-color-primary);
    --text-color-hover: #fff;
}

.button.-secondary {
    --background-color: #ccc;
    --background-color-hover: #999;
    --border-color: #ccc;
    --border-color-hover: #999;
    --text-color: #333;
    --text-color-hover: #333;
}

.button.-link {
    --background-color: transparent;
    --background-color-hover: transparent;
    --border-color: transparent;
    --border-color-hover: transparent;
    --text-color: var(--cs-color-link);
    --text-color-hover: var(--cs-color-link-hover);
}

.button.-small {
    --cs-sub-rhythm: calc(14 * var(--cs-rhythm-sixteenth));
    --border-thickness: var(--cs-rhythm-sixteenth);
    --font-size: var(--cs-font-size);
    --line-height: var(--cs-line-height);
    --min-height: var(--cs-sub-rhythm);
    --padding: 0 var(--cs-rhythm-half);

    margin-top: calc(-2 * var(--cs-rhythm-sixteenth));
}

.button.-large {
    --border-thickness: var(--cs-rhythm-eighth);
    --font-size: var(--cs-font-size-large);
    --min-height: calc(3 * var(--cs-rhythm));
    --padding: calc(3 * var(--cs-rhythm-eighth)) calc(2 * var(--cs-rhythm));
}

/*

Forms

Markup:
<form>
    <label class="textfield">
        <span class="label">Name</span>
        <input type="text" />
    </label>
    <label class="radio">
        <input type="radio" name="example" />
        <span class="label">Desktop</span>
    </label>
    <label class="radio">
        <input type="radio" name="example" />
        <span class="label">Mobile</span>
    </label>
    <label for="select" class="select">
        <span class="label">Favorite Ice Cream</span>
        <select name="select">
            <option disabled="disabled" selected="selected">Flavors</option>
            <option>Chocolate</option>
        </select>
    </label>
    <label class="textfield">
        <span class="label">Comments</span>
        <textarea></textarea>
    </label>
    <label class="checkbox">
        <input type="checkbox" />
        <span class="label">I Lied</span>
    </label>
</form>

Styleguide 3.0

*/

/*
    Shared Styles
    All form controls
*/

.radio [disabled],
.checkbox [disabled],
.select [disabled],
.textfield [disabled],
.radio [disabled] + *,
.checkbox [disabled] + *,
.select [disabled] + *,
.textfield [disabled] + *,
[type=button][disabled],
[type=reset][disabled],
[type=submit][disabled],
button[disabled] {
    cursor: default;
    opacity: .5;
    pointer-events: none;
}

/*
    Shared Styles
    Radio and Checkbox
*/

.radio,
.checkbox {
    cursor: pointer;
    display: inline-block;
    margin-bottom: var(--cs-rhythm);
    padding: 0 var(--cs-rhythm-half) 0 var(--cs-rhythm);
    position: relative;
}

.radio::before,
.checkbox::before {
    background-color: var(--cs-color-white);
    border: var(--cs-rhythm-twelfth) solid var(--cs-color-gray3);
    content: '';
    height: var(--cs-rhythm-half);
    left: 0;
    margin-top: calc(-1 * var(--cs-rhythm-third));
    position: absolute;
    top: 50%;
    width: var(--cs-rhythm-half);
}

.checkbox input[type=checkbox],
.radio input[type=radio] {
    opacity: 0;
    position: absolute;
    z-index: 0;
}

.radio .label,
.checkbox .label {
    color: var(--cs-color-gray3);
    font-size: var(--cs-rhythm-half);
    line-height: 1;
}

.radio .label::before,
.radio .label::after,
.checkbox .label::after {
    border: var(--cs-rhythm-twelfth) solid transparent;
    content: '';
    height: var(--cs-rhythm-half);
    left: 0;
    margin-top: calc(-1 * var(--cs-rhythm-third));
    position: absolute;
    top: 50%;
    width: var(--cs-rhythm-half);
}

.radio input[type=radio]:focus + .label::after,
.checkbox input[type=checkbox]:focus + .label::after {
    outline: var(--cs-rhythm-twelfth) dotted #f00;
    outline-offset: var(--cs-rhythm-twelfth);
}

/*
    Shared Styles
    Textfield and Select
*/

.textfield,
.select {
    background-color: var(--cs-color-white);
    display: block;
    margin-bottom: var(--cs-rhythm);
    position: relative;
}

.textfield .label,
.select .label {
    background-color: var(--cs-color-white);
    font-size: var(--cs-rhythm-half);
    position: absolute;
    left: var(--cs-rhythm-sixteenth);
    line-height: 1;
    padding: var(--cs-rhythm-fourth);
    right: var(--cs-rhythm-sixteenth);
    top: var(--cs-rhythm-sixteenth);
}

.textfield input,
.textfield textarea,
.select select {
    background-color: transparent;
    border: var(--cs-rhythm-sixteenth) solid var(--cs-color-gray3);
    border-radius: var(--cs-border-radius);
    box-sizing: border-box;
    padding: calc(3 * var(--cs-rhythm-fourth)) var(--cs-rhythm-fourth) calc(2 * var(--cs-rhythm-sixteenth));
    position: relative;
    width: 100%;
}

.select select {
    z-index: 1;
}

.textfield *:focus,
.select select:focus {
    border-color: var(--cs-color-primary);
    box-shadow: 0 var(--cs-rhythm-sixteenth) var(--cs-rhythm-eigth) 0 var(--cs-color-gray5) inset;
    outline: none;
}

/*

Radio

Markup:
<label class="radio {{modifier_class}}">
    <input type="radio" />
    <span class="label">Radio</span>
</label>

Styleguide 3.1

*/

.radio::before,
.radio .label::before,
.radio .label::after { /* stylelint-disable-line */
    border-radius: var(--cs-rhythm);
}

.radio input[type=radio]:checked + .label::after {
    color: var(--cs-color-primary-dark);
    content: '\26ab';
    text-align: center;
}

/*

Checkbox

Markup:
<label class="checkbox {{modifier_class}}">
    <input type="checkbox" />
    <span class="label">Checkbox</span>
</label>

Styleguide 3.2

*/

.checkbox::before,
.checkbox .label::after { /* stylelint-disable-line */
    border-radius: var(--cs-border-radius);
}

.checkbox input[type=checkbox]:checked + .label::after {
    color: var(--cs-color-primary-dark);
    content: '\2714';
    text-align: center;
}

/*

Input and text areas

Markup:
<label class="textfield {{modifier_class}}">
    <span class="label">Input</span>
    <input type="text" />
</label>
<label class="textfield {{modifier_class}}">
    <span class="label">Textarea</span>
    <textarea></textarea>
</label>

Styleguide 3.3

*/

.textfield textarea {
    min-height: calc(4 * var(--cs-rhythm));
}

/*

Select

Markup:
<label class="select {{modifier_class}}">
    <select>
        <option disabled="disabled" selected="selected">Select</option>
        <option>Option 1</option>
        <option>Option 2</option>
        <option>Option 3</option>
    </select>
    <span class="label">Select Label</span>
</label>

Styleguide 3.4

*/

.select::after {
    content: '';
    border-left: var(--cs-rhythm-fourth) solid transparent;
    border-right: var(--cs-rhythm-fourth) solid transparent;
    border-top: var(--cs-rhythm-fourth) solid var(--cs-color-gray3);
    height: 0;
    position: absolute;
    right: var(--cs-rhythm-half);
    bottom: calc(2 * var(--cs-rhythm-third));
    width: 0;
}

.select option[disabled] {
    background-color: var(--cs-color-gray6);
    color: var(--cs-color-gray2);
}

/* Firefox detection for keeping exact rhythm */
@-moz-document url-prefix() {
    .select {
        margin-top: -2px;
    }
}

/*

Grid

A simple grid with automatic columns

Markup:
<div class="grid">
    <div>Column</div>
    <div>Column</div>
    <div>Column</div>
    <div>Column</div>
    <div>Column</div>
</div>

Styleguide 4.0

*/

.grid {
    --cs-grid-column-min: 15rem;

    display: grid;
    grid-gap: var(--cs-rhythm);
    grid-template-columns:
        repeat(
            auto-fit,
            minmax(var(--cs-grid-column-min), 1fr)
        );
}

/*

Utilities

These utility classes have one or two CSS properties that are meant to save you from creating several identical classes to do the same thing, like just centering some text.

Markup:
<div class="{{modifier_class}}" style="background-color: #ddd">
    Example Text
</div>

.disabled                - Disable an Element
.smooth                  - Smoothed font rendering
.clearfix                - Clear floats to keep the parent container in shape
.f-none                  - float: none;
.f-left                  - float: left;
.f-right                 - float: right;
.ta-left                 - text-align: left;
.ta-center               - text-align: center;
.ta-right                - text-align: right;

Styleguide 5.0

*/

.disabled {
    cursor: default;
    opacity: .5;
    pointer-events: none;
}

.smooth {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.f-none {
    float: none;
}

.f-left {
    float: left;
}

.f-right {
    float: right;
}

.clearfix {
    clear: both;
    overflow: hidden;
}

.ta-left {
    text-align: left;
}

.ta-center {
    text-align: center;
}

.ta-right {
    text-align: right;
}

/*

Type Utilities

These are specific typography related utilities

Markup:
<div class="type {{modifier_class}}">
    The quick brown fox jumps over the lazy dog.
</div>

.fw-light            - Changes the type to be 300 weight
.fw-normal           - Changes the type to be 400 weight
.fw-semibold         - Changes the type to be 600 weight
.fw-bold             - Changes the type to be 700 weight

Styleguide 5.1

*/

.fw-light {
    font-weight: 300;
}

.fw-normal {
    font-weight: 400;
}

.fw-semibold {
    font-weight: 600;
}

.fw-bold {
    font-weight: 700;
}
